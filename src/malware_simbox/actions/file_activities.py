import os
import random
import string
import platform
from malware_simbox.handler.log_handler import log_errors
from malware_simbox.actions.action import Action


class FileActivity(Action):

    def __init__(self) -> None:
        super().__init__()
        
        if platform.system().lower() == "windows":
            self.system_path = os.path.join(os.getenv("WINDIR"), "System32")
            self.temp_path = os.environ["TEMP"]
        else:
            raise NotImplementedError()


    def run(self):
        self._create_suspicious_file()
        self._create_random_files()
        self._access_monitoring_file()


    @log_errors
    def _create_suspicious_file(self):
        """Creates a file within the System32 folder"""

        file_path = os.path.join(self.system_path, "suspicious_file.txt")
        
        self.write_file(file_path, "This is a test file created by tools-malware-simbox.")
        

    @log_errors
    def _create_random_files(self):
        """Creates some random files in the temp folder"""
        
        if platform.system().lower() == "windows":
            for _ in range(5):
                # Generate random filename
                random_file_name = "".join(random.choices(string.ascii_letters + string.digits, k=8)) + ".txt"
                file_path = os.path.join(self.temp_path, random_file_name)
                
                # Write test content to the random file
                self.write_file(file_path, "This is a test file created by tools-malware-simbox.")


    @log_errors
    def _access_monitoring_file(self):
        """Reads content from activity.log for monitoring purposes"""

        with open("activity.log", "r") as f:
            data = f.read()
