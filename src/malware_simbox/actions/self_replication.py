import os
import sys
import shutil
import platform
import logging
from malware_simbox.handler.log_handler import log_errors
from malware_simbox.actions.action import Action

class SelfReplication(Action):

    def __init__(self) -> None:
        super().__init__()
        
        if platform.system().lower() == "windows":        
            self.destination_dir = os.path.join(os.getenv("APPDATA"), "MalwareSimulation")


    def run(self) -> None:
        self._replicate_malware()


    @log_errors
    def _replicate_malware(self) -> None:
        """Replicates the current script or executable into a target directory."""

        # Determine if the application is a frozen executable or a script
        if getattr(sys, "frozen", False):
            application_path = os.path.abspath(sys.executable)
        elif __file__:
            application_path = os.path.abspath(__file__)
        else:
            raise FileNotFoundError("Failed to find application path.")
        
        logging.info(f"Using application path: {application_path}")

        # Create the destination directory if it doesn't exist
        if not os.path.exists(self.destination_dir):
            os.makedirs(self.destination_dir)

        # Construct the full path for the replicated file
        replication_path = os.path.join(self.destination_dir, os.path.basename(application_path))
        
        # Copy the current file to the destination directory
        shutil.copy(application_path, os.path.join(self.destination_dir, replication_path))
